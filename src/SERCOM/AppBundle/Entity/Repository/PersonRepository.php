<?php

namespace SERCOM\AppBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * PersonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PersonRepository extends EntityRepository{

    public function search($search){

        $query = $this->_em->createQueryBuilder()->select('p')
                            ->from('SERCOMAppBundle:Person','p')
                            ->join('p.member','m')
                            ->join('m.asblfunctions','f')
                            ->where('p.lastname LIKE ?1 OR p.firstname LIKE ?2 OR f.fonction LIKE ?3 AND m.actif = 1')
                            ->groupBy('m')
                            ->setParameters(array(1 => '%'.$search.'%' , 2 => '%'.$search.'%', 3 => '%'.$search.'%'));

        return $query->getQuery()->getResult();
    }

    public function getRoleUser($id){
        $query = $this->_em->createQuery('SELECT s FROM SERCOMAppBundle:SiteGroup s JOIN s.persons p WHERE s.name LIKE ?1 OR s.name LIKE ?2 OR s.name LIKE ?3 or s.name LIKE ?4 AND p.person_id = '.$id)
            ->setParameters(array(1 => 'ROLE_PRESIDENT', 2 => 'ROLE_ANIMATEUR', 3 => 'ROLE_COMITE', 4 => 'ROLE_MEMBRE' ));
        return $query->getResult();
    }

    public function findMembers($page = 1, $maxperpage = 9){
        $query = $this->_em->createQueryBuilder()->select('m')->from('SERCOMAppBundle:Member','m')->join('m.person','p')->where('p.validate = 1 and m.actif = 1');
        $query->setFirstResult(($page-1) * $maxperpage)
            ->setMaxResults($maxperpage);

        return new Paginator($query);
    }

    public function countMembers(){
        $query = $this->_em->createQuery('SELECT m FROM SERCOMAppBundle:Member m JOIN m.person p WHERE p.validate = 1 AND m.actif = 1');
        return count($query->getResult());
    }

    public function getToValid($page, $max){
        $query = $this->_em->createQueryBuilder()->select('p')
                                                ->from('SERCOMAppBundle:Person','p')
                                                ->where('p.validate = 0')
                                                ->orderBy('p.date_inscription', 'ASC')
                                                ->setFirstResult(($page-1) * $max)
                                                ->setMaxResults($max);
        return new Paginator($query);
    }

    public function countToValid(){
        return $this->_em->createQuery('SELECT COUNT(p) FROM SERCOMAppBundle:Person p WHERE p.validate = 0')->getSingleScalarResult();
    }

    public function getValid($page, $max){
        $query = $this->_em->createQueryBuilder()->select('p')
            ->from('SERCOMAppBundle:Person','p')
            ->where('p.validate = 1')
            ->orderBy('p.date_inscription', 'ASC')
            ->setFirstResult(($page-1) * $max)
            ->setMaxResults($max);
        return new Paginator($query);
    }

    public function countValid(){
        return $this->_em->createQuery('SELECT COUNT(p) FROM SERCOMAppBundle:Person p WHERE p.validate = 1')->getSingleScalarResult();
    }

}
